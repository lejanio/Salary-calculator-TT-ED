{"version":3,"sources":["components/Input/Input.tsx","components/PayAmount/PayAmount.tsx","assets/data.ts","components/Calculator/Calculator.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Input","day","hours","onChange","className","type","value","e","onFocus","target","select","PayAmount","pay","weekdays","employees","id","name","weeks","interval","Calculator","useState","initialEmployeeTable","employeeTable","setEmployeeTable","selectedEmployee","setSelectedEmployee","selectedWeek","setSelectedWeek","totalHours","setTotalHours","totalSalary","setTotalSalary","progressBarActive","setProgressBarActive","weekObjectIndex","findIndex","item","employeeObjectIndex","useEffect","intervalId","setInterval","chosenEmployeeWeek","map","index","time","Number","isNaN","produce","draft","calculateDailyPay","clearInterval","total","forEach","calculateTotalHours","calculateTotalSalary","icon","faUserAlt","selected","disabled","faAngleDown","parseInt","toFixed","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de232596.chunk.js","sourcesContent":["import React, {\n  ChangeEvent, FC, useEffect, useState,\n} from 'react';\nimport './Input.scss';\n\ntype InputType = {\n  day: string;\n  hours: number;\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst Input:FC<InputType> = ({ day, hours, onChange }) => (\n  <div className=\"weekday-information\">\n    <div>\n      <label className=\"custom-label\">\n        <span className=\"label-text\">{day}</span>\n        <input\n          type=\"text\"\n          className=\"input\"\n          value={hours}\n          onChange={(e) => {\n            onChange(e);\n          }}\n          onFocus={(e) => e.target.select()}\n        />\n      </label>\n    </div>\n  </div>\n);\n\nexport default Input;\n","import React, { FC } from 'react';\n\ntype NewPayIndicatorType = {\n  pay: string;\n}\n\nconst PayAmount:FC<NewPayIndicatorType> = ({ pay }) => (\n  <div>\n    {pay}\n  </div>\n);\n\nexport default PayAmount;\n","export const weekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n\nexport const employees = [\n  {\n    id: 1,\n    name: 'Janice Ribtab',\n    weeks: [\n      {\n        hours: [1, 0, 1, 0, 1, 0, 1],\n        pay: [10, 0, 10, 0, 10, 0, 20],\n      },\n      {\n        hours: [0, 1, 0, 1, 0, 1, 0],\n        pay: [0, 10, 0, 10, 0, 20, 0],\n      },\n      {\n        hours: [1, 0, 1, 0, 1, 0, 1],\n        pay: [10, 0, 10, 0, 10, 0, 20],\n      },\n      {\n        hours: [0, 1, 0, 1, 0, 1, 0],\n        pay: [0, 10, 0, 10, 0, 20, 0],\n      },\n      {\n        hours: [1, 0, 1, 0, 1, 0, 1],\n        pay: [10, 0, 10, 0, 10, 0, 20],\n      },\n    ],\n  },\n  {\n    id: 2,\n    name: 'Steve Wiki',\n    weeks: [\n      {\n        hours: [2, 0, 2, 0, 2, 0, 2],\n        pay: [20, 0, 20, 0, 20, 0, 40],\n      },\n      {\n        hours: [0, 2, 0, 2, 0, 2, 0],\n        pay: [0, 20, 0, 20, 0, 40, 0],\n      },\n      {\n        hours: [2, 0, 2, 0, 2, 0, 2],\n        pay: [20, 0, 20, 0, 20, 0, 40],\n      },\n      {\n        hours: [0, 2, 0, 2, 0, 2, 0],\n        pay: [0, 20, 0, 20, 0, 40, 0],\n      },\n      {\n        hours: [2, 0, 2, 0, 2, 0, 2],\n        pay: [20, 0, 20, 0, 20, 0, 40],\n      },\n    ],\n  },\n  {\n    id: 3,\n    name: 'Zoe Hedge',\n    weeks: [\n      {\n        hours: [3, 0, 3, 0, 3, 0, 3],\n        pay: [30, 0, 30, 0, 30, 0, 60],\n      },\n      {\n        hours: [0, 3, 0, 3, 0, 3, 0],\n        pay: [0, 30, 0, 30, 0, 60, 0],\n      },\n      {\n        hours: [3, 0, 3, 0, 3, 0, 3],\n        pay: [30, 0, 30, 0, 30, 0, 60],\n      },\n      {\n        hours: [0, 3, 0, 3, 0, 3, 0],\n        pay: [0, 30, 0, 30, 0, 60, 0],\n      },\n      {\n        hours: [3, 0, 3, 0, 3, 0, 3],\n        pay: [30, 0, 30, 0, 30, 0, 60],\n      },\n    ],\n  },\n  {\n    id: 4,\n    name: 'Rufus Relquis',\n    weeks: [\n      {\n        hours: [4, 0, 4, 0, 4, 0, 4],\n        pay: [40, 0, 40, 0, 40, 0, 80],\n      },\n      {\n        hours: [0, 4, 0, 4, 0, 4, 0],\n        pay: [0, 40, 0, 40, 0, 80, 0],\n      },\n      {\n        hours: [4, 0, 4, 0, 4, 0, 4],\n        pay: [40, 0, 40, 0, 40, 0, 80],\n      },\n      {\n        hours: [0, 4, 0, 4, 0, 4, 0],\n        pay: [0, 40, 0, 40, 0, 80, 0],\n      },\n      {\n        hours: [4, 0, 4, 0, 4, 0, 4],\n        pay: [40, 0, 40, 0, 40, 0, 80],\n      },\n    ],\n  }];\n\nexport const weeks = [\n  {\n    id: 1,\n    interval: '17 Jan 2022 - 23 Jan 2022',\n  },\n  {\n    id: 2,\n    interval: '10 Jan 2022 - 16 Jan 2022',\n  },\n  {\n    id: 3,\n    interval: '3 Jan 2022 - 9 Jan 2022',\n  },\n  {\n    id: 4,\n    interval: '27 Dec 2021 - 2 Jan 2022',\n  },\n  {\n    id: 5,\n    interval: '20 Dec 2021 - 26 Dec 2021',\n  },\n];\n","import React, { ChangeEvent, useEffect, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleDown, faUserAlt } from '@fortawesome/free-solid-svg-icons';\nimport produce from 'immer';\nimport Input from '../Input/Input';\nimport PayAmount from '../PayAmount/PayAmount';\nimport './Calculator.scss';\nimport { weekdays, employees as initialEmployeeTable, weeks } from '../../assets/data';\n\ntype EmployeeTable = {\n  id: number\n  name: string,\n  weeks: {\n    hours: number[];\n    pay: number[];\n  }[],\n}\n\nconst Calculator = () => {\n  const [employeeTable, setEmployeeTable] = useState<EmployeeTable[]>(initialEmployeeTable);\n  const [selectedEmployee, setSelectedEmployee] = useState('');\n  const [selectedWeek, setSelectedWeek] = useState('');\n  const [totalHours, setTotalHours] = useState(0);\n  const [totalSalary, setTotalSalary] = useState(0);\n  const [progressBarActive, setProgressBarActive] = useState(false);\n\n  const weekObjectIndex = weeks.findIndex((item) => item.interval === selectedWeek);\n  const employeeObjectIndex = employeeTable.findIndex((item) => item.name === selectedEmployee);\n\n  const calculateTotalHours = () => {\n    if (employeeObjectIndex >= 0 && weekObjectIndex >= 0) {\n      let total = 0;\n      const chosenEmployeeWeekHours = employeeTable[employeeObjectIndex].weeks[weekObjectIndex].hours;\n\n      chosenEmployeeWeekHours.forEach((item) => {\n        total += +item;\n      });\n      setTotalHours(total);\n    }\n  };\n\n  const calculateTotalSalary = () => {\n    if (employeeObjectIndex >= 0 && weekObjectIndex >= 0) {\n      let total = 0;\n      const chosenEmployeeWeekPay = employeeTable[employeeObjectIndex].weeks[weekObjectIndex].pay;\n\n      chosenEmployeeWeekPay.forEach((item) => {\n        total += +item;\n      });\n      setTotalSalary(total);\n    }\n  };\n\n  const calculateDailyPay = () => {\n    if (employeeObjectIndex >= 0 && weekObjectIndex >= 0) {\n      let pay = 0;\n      const chosenEmployeeWeek = employeeTable[employeeObjectIndex].weeks[weekObjectIndex];\n\n      chosenEmployeeWeek.pay.map((item, index) => {\n        const time = chosenEmployeeWeek.hours[index];\n        if (index === 5 || index === 6) {\n          pay = time * 10 * 2;\n        } else {\n          pay = time * 10;\n        }\n        if (Number.isNaN(pay)) {\n          pay = 0;\n        }\n        setProgressBarActive(false);\n        return setEmployeeTable(\n          produce((draft) => {\n            draft[employeeObjectIndex].weeks[weekObjectIndex].pay[index] = pay;\n          }),\n        );\n      });\n    }\n  };\n\n  useEffect(() => {\n    const intervalId = setInterval(() => calculateDailyPay(), 500);\n    return () => clearInterval(intervalId);\n  }, [selectedEmployee, selectedWeek, employeeTable]);\n\n  useEffect(() => {\n    calculateTotalHours();\n    calculateTotalSalary();\n  }, [selectedEmployee, selectedWeek, employeeTable]);\n\n  return (\n    <div className=\"app\">\n      <div className=\"app-container\">\n        <header className=\"header\">\n          <div>\n            <label className=\"custom-label--large\">\n              <span className=\"label-text--large\">Employee</span>\n              <FontAwesomeIcon icon={faUserAlt} className=\"user-icon\" />\n              <select\n                name=\"employees\"\n                className=\"input--large\"\n                value={selectedEmployee}\n                onChange={(e) => {\n                  setSelectedEmployee(e.target.value);\n                }}\n              >\n                <option value=\"\" selected disabled>Choose an employee</option>\n                {employeeTable.map(({ id, name }) => (\n                  <option key={id} value={name}>{name}</option>\n                ))}\n              </select>\n              <FontAwesomeIcon icon={faAngleDown} className=\"angle-down-icon\" />\n            </label>\n          </div>\n          <div>\n            <label className=\"custom-label--large\">\n              <span className=\"label-text--large\">Week</span>\n              <FontAwesomeIcon icon={faUserAlt} className=\"user-icon\" />\n              <select\n                name=\"weeks\"\n                className=\"input--large\"\n                id=\"weeks\"\n                value={selectedWeek}\n                onChange={(e) => {\n                  setSelectedWeek(e.target.value);\n                }}\n              >\n                <option value=\"\" selected disabled>Choose week</option>\n                {weeks.map(({ id, interval }) => (\n                  <option key={id} value={interval}>{interval}</option>\n                ))}\n              </select>\n              <FontAwesomeIcon icon={faAngleDown} className=\"angle-down-icon\" />\n            </label>\n          </div>\n        </header>\n        <div className=\"progress-bar--wrapper\">\n          {progressBarActive && (\n            <div className=\"progress-bar--container\">\n              <div className=\"progress-bar\" />\n            </div>\n          )}\n        </div>\n        <section className=\"main-section\">\n          {(weekObjectIndex >= 0 && employeeObjectIndex >= 0)\n            ? (employeeTable[employeeObjectIndex].weeks[weekObjectIndex].hours.map(\n              (item, index) => (\n                <div\n                  key={weekdays[index]}\n                  className=\"row-item\"\n                >\n                  <div>\n                    <Input\n                      day={weekdays[index]}\n                      hours={item}\n                      onChange={\n                      (e: ChangeEvent<HTMLInputElement>) => {\n                        setProgressBarActive(true);\n                        setEmployeeTable(produce((draft) => {\n                          draft[employeeObjectIndex].weeks[weekObjectIndex].hours[index] = parseInt(e.target.value, 10);\n                        }));\n                      }\n                    }\n                    />\n                  </div>\n                  <div className=\"daily-pay\">\n                    €\n                    <span>\n                      <PayAmount\n                        pay={employeeTable[employeeObjectIndex].weeks[weekObjectIndex].pay[index].toFixed(2)}\n                      />\n                      {}\n                    </span>\n                  </div>\n                </div>\n              ),\n            ))\n            : (<div className=\"message\">Please choose an employee and a time interval</div>)}\n        </section>\n        <footer className=\"footer\">\n          <div className=\"footer__item\">\n            <span>Hours worked</span>\n            <span>\n              {totalHours}\n            </span>\n          </div>\n          <div className=\"footer__item\">\n            <span>Salary</span>\n            <span>\n              €\n              {' '}\n              {totalSalary.toFixed(2)}\n            </span>\n          </div>\n        </footer>\n      </div>\n    </div>\n  );\n};\n\nexport default Calculator;\n","import './App.scss';\nimport Calculator from './components/Calculator/Calculator';\n\nconst App = () => (\n  <Calculator />\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}